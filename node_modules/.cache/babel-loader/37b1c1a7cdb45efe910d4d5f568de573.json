{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { subscribeToMsgs, sendMsg } from './api';\nimport ReactHtmlParser from 'react-html-parser';\nimport './index.css';\n\nfunction linkify(text) {\n  // eslint-disable-next-line\n  var urlRegex = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig;\n  return text.replace(urlRegex, function (url) {\n    return '<a href=\"' + url + '\">' + url + '</a>';\n  });\n}\n\nfunction removeHTML(text) {\n  var htmlRegex = /<\\/?([\\s\\S]*?)>/g;\n  return text.replace(htmlRegex, '');\n}\n\nfunction parseCommands(text) {\n  var endReg = /\\[\\/\\]/g;\n  var begReg = /\\[/g;\n  var lastReg = /\\]/g;\n  return text.replace(endReg, '</span>').replace(begReg, \"<span style=\\\"\").replace(lastReg, \"\\\">\");\n}\n\nvar ChatBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChatBar, _React$Component);\n\n  function ChatBar() {\n    _classCallCheck(this, ChatBar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChatBar).apply(this, arguments));\n  }\n\n  _createClass(ChatBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.chatEvent();\n    }\n  }, {\n    key: \"chatEvent\",\n    value: function chatEvent() {\n      var _this = this;\n\n      document.getElementById(\"chatBox\").addEventListener(\"keypress\", function (event) {\n        if (event.keyCode === 13) {\n          event.preventDefault();\n          document.getElementById(\"chatSend\").click();\n        }\n\n        if (event.keyCode === 38) {\n          document.getElementById(\"chatBox\").value = _this.props.lastMsg;\n        }\n      });\n      document.getElementById(\"usrBox\").addEventListener(\"keypress\", function (event) {\n        if (event.keyCode === 13) {\n          event.preventDefault();\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"usrBox\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"chatBox\",\n        autoFocus: \"autofocus\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        id: \"chatSend\",\n        onClick: function onClick() {\n          var chatBox = document.getElementById(\"chatBox\");\n          var usrBox = document.getElementById(\"usrBox\");\n          var usr;\n          if (!usrBox.value | usrBox.value.length >= 200) usr = \"Anonymous\";else usr = usrBox.value;\n          if (chatBox.value !== \"\" && chatBox.value.length <= 500) _this2.props.onClick(chatBox.value, usr);\n          chatBox.value = \"\";\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Send\"), React.createElement(\"hr\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChatBar;\n}(React.Component);\n\nvar ChatMsg =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(ChatMsg, _React$Component2);\n\n  function ChatMsg() {\n    _classCallCheck(this, ChatMsg);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChatMsg).apply(this, arguments));\n  }\n\n  _createClass(ChatMsg, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, ReactHtmlParser(linkify(parseCommands(removeHTML(this.props.usr))))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, ReactHtmlParser(linkify(parseCommands(removeHTML(this.props.msg))))));\n    }\n  }]);\n\n  return ChatMsg;\n}(React.Component);\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(Chat, _React$Component3);\n\n  function Chat(props) {\n    var _this3;\n\n    _classCallCheck(this, Chat);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n    _this3.state = {\n      history: []\n    };\n    subscribeToMsgs(function (err, res) {\n      return _this3.setState({\n        history: res\n      });\n    });\n    return _this3;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.scroll(0, document.body.scrollHeight);\n    }\n  }, {\n    key: \"lastMsg\",\n    value: function lastMsg() {\n      return this.state.history[this.state.history.length - 1];\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(value, usrName) {\n      sendMsg({\n        usr: usrName,\n        msg: value\n      });\n      window.scroll(0, document.body.scrollHeight);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(ChatBar, {\n        onClick: function onClick(value, usrName) {\n          _this4.handleClick(value, usrName);\n        },\n        lastMsg: lastMsg(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"msg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.state.history.map(function (item, index) {\n        return React.createElement(ChatMsg, {\n          key: index,\n          msg: item.msg,\n          usr: item.usr,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Chat;\n}(React.Component); // ========================================\n\n\nReactDOM.render(React.createElement(Chat, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:\\Users\\dhodu\\Documents\\Nodejs Projects\\Chat\\src\\index.js"],"names":["React","ReactDOM","subscribeToMsgs","sendMsg","ReactHtmlParser","linkify","text","urlRegex","replace","url","removeHTML","htmlRegex","parseCommands","endReg","begReg","lastReg","ChatBar","chatEvent","document","getElementById","addEventListener","event","keyCode","preventDefault","click","value","props","lastMsg","chatBox","usrBox","usr","length","onClick","Component","ChatMsg","msg","Chat","state","history","err","res","setState","window","scroll","body","scrollHeight","usrName","handleClick","map","item","index","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { subscribeToMsgs, sendMsg } from './api'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport './index.css'\r\n\r\nfunction linkify(text) {\r\n    // eslint-disable-next-line\r\n    let urlRegex = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig\r\n    return text.replace(urlRegex, function (url) {\r\n        return '<a href=\"' + url + '\">' + url + '</a>'\r\n    })\r\n}\r\n\r\nfunction removeHTML(text) {\r\n    let htmlRegex = /<\\/?([\\s\\S]*?)>/g\r\n    return text.replace(htmlRegex, '')\r\n}\r\n\r\nfunction parseCommands(text) {\r\n    let endReg = /\\[\\/\\]/g\r\n    let begReg = /\\[/g\r\n    let lastReg = /\\]/g\r\n    return text.replace(endReg, '</span>').replace(begReg, `<span style=\"`).replace(lastReg, `\">`)\r\n}\r\n\r\nclass ChatBar extends React.Component {\r\n    componentDidMount() {\r\n        this.chatEvent()\r\n    }\r\n    chatEvent() {\r\n        document.getElementById(\"chatBox\").addEventListener(\"keypress\", (event) => {\r\n            if (event.keyCode === 13) {\r\n                event.preventDefault()\r\n                document.getElementById(\"chatSend\").click()\r\n            }\r\n            if (event.keyCode === 38) {\r\n                document.getElementById(\"chatBox\").value = this.props.lastMsg\r\n            }\r\n        })\r\n        document.getElementById(\"usrBox\").addEventListener(\"keypress\", (event) => {\r\n            if (event.keyCode === 13) {\r\n                event.preventDefault()\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <form>\r\n                <input type=\"text\" id=\"usrBox\" autoComplete=\"off\"></input>\r\n                <input type=\"text\" id=\"chatBox\" autoFocus=\"autofocus\" autoComplete=\"off\"></input>\r\n                <button type=\"button\" id=\"chatSend\" onClick={\r\n                    () => {\r\n                        let chatBox = document.getElementById(\"chatBox\")\r\n                        let usrBox = document.getElementById(\"usrBox\")\r\n                        let usr\r\n                        if (!usrBox.value | usrBox.value.length >= 200) usr = \"Anonymous\"\r\n                        else usr = usrBox.value\r\n                        if (chatBox.value !== \"\" && chatBox.value.length <= 500) this.props.onClick(chatBox.value, usr)\r\n                        chatBox.value = \"\"\r\n                    }\r\n                }\r\n                >Send</button>\r\n                <hr className=\"box\"></hr>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nclass ChatMsg extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>\r\n                    {ReactHtmlParser(linkify(parseCommands(removeHTML(this.props.usr))))}\r\n                </h3>\r\n                <p>\r\n                    {ReactHtmlParser(linkify(parseCommands(removeHTML(this.props.msg))))}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            history: []\r\n        }\r\n        subscribeToMsgs((err, res) => this.setState({ history: res }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scroll(0, document.body.scrollHeight)\r\n    }\r\n\r\n    lastMsg() {\r\n        return this.state.history[this.state.history.length - 1]\r\n    }\r\n\r\n    handleClick(value, usrName) {\r\n        sendMsg({ usr: usrName, msg: value })\r\n        window.scroll(0, document.body.scrollHeight)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ChatBar onClick={(value, usrName) => {\r\n                    this.handleClick(value, usrName)\r\n                }\r\n                }\r\n                lastMsg={lastMsg()} />\r\n                <div className=\"msg\">\r\n                    {\r\n                        this.state.history.map((item, index) => (\r\n                            <ChatMsg key={index} msg={item.msg} usr={item.usr} />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Chat />,\r\n    document.getElementById(\"root\")\r\n)"]},"metadata":{},"sourceType":"module"}