{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { subscribeToMsgs, sendMsg } from './api';\nimport ReactHtmlParser from 'react-html-parser';\nimport './index.css';\n\nfunction linkify(text) {\n  // eslint-disable-next-line\n  var urlRegex = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig;\n  return text.replace(urlRegex, function (url) {\n    return '<a href=\"' + url + '\">' + url + '</a>';\n  });\n}\n\nfunction removeHTML(text) {\n  var htmlRegex = /<\\/?([\\s\\S]*?)>/g;\n  return text.replace(htmlRegex, '');\n}\n\nfunction parseCommands(text) {\n  var endReg = /\\[\\/\\]/g,\n      italicReg = /\\[i\\]/g,\n      boldReg = /\\[b\\]/g,\n      underlineReg = /\\[u\\]/g,\n      strikethroughReg = /\\[s\\]/g,\n      begReg = /\\[/g,\n      lastReg = /\\]/g;\n  return text.replace(endReg, '</span>').replace(italicReg, \"<span style=\\\"font-style:italic\\\">\").replace(boldReg, \"<span style=\\\"font-weight:bold\\\">\").replace(underlineReg, \"<span style=\\\"text-decoration:underline\\\">\").replace(strikethroughReg, \"<span style=\\\"text-decoration:line-through\\\">\").replace(begReg, \"<span style=\\\"\").replace(lastReg, \"\\\">\");\n}\n\nvar ChatBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChatBar, _React$Component);\n\n  function ChatBar() {\n    _classCallCheck(this, ChatBar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChatBar).apply(this, arguments));\n  }\n\n  _createClass(ChatBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.chatEvent();\n    }\n  }, {\n    key: \"chatEvent\",\n    value: function chatEvent() {\n      var _this = this;\n\n      var chatBox = document.getElementById(\"chatBox\");\n      var usrBox = document.getElementById(\"usrBox\");\n      chatBox.addEventListener(\"keypress\", function (event) {\n        if (event.keyCode === 13) {\n          event.preventDefault();\n          document.getElementById(\"chatSend\").click();\n        }\n      });\n      chatBox.addEventListener(\"keydown\", function (event) {\n        if (event.keyCode === 38) {\n          chatBox.value = _this.props.lastMsg.msg;\n        }\n      });\n      usrBox.addEventListener(\"keypress\", function (event) {\n        if (event.keyCode === 13) {\n          event.preventDefault();\n        }\n      });\n      usrBox.addEventListener(\"keydown\", function (event) {\n        if (event.keyCode === 38) {\n          usrBox.value = _this.props.lastMsg.usr;\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"usrBox\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"chatBox\",\n        autoFocus: \"autofocus\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        id: \"chatSend\",\n        onClick: function onClick() {\n          var chatBox = document.getElementById(\"chatBox\");\n          var usrBox = document.getElementById(\"usrBox\");\n          var usr;\n          if (!usrBox.value | usrBox.value.length >= 200) usr = \"Anonymous\";else usr = usrBox.value;\n          if (chatBox.value !== \"\" && chatBox.value.length <= 500) _this2.props.onClick(chatBox.value, usr);\n          chatBox.value = \"\";\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Send\"), React.createElement(\"hr\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChatBar;\n}(React.Component);\n\nvar ChatMsg =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(ChatMsg, _React$Component2);\n\n  function ChatMsg() {\n    _classCallCheck(this, ChatMsg);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChatMsg).apply(this, arguments));\n  }\n\n  _createClass(ChatMsg, [{\n    key: \"checkLast\",\n    value: function checkLast() {\n      console.log(this.props.lastMsg + '|' + this.props.key);\n      if (this.props.lastMsg !== this.props.index) return React.createElement(\"hr\", {\n        className: \"div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"usr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, ReactHtmlParser(linkify(parseCommands(removeHTML(this.props.usr))))), React.createElement(\"p\", {\n        className: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.props.date), React.createElement(\"p\", {\n        className: \"msg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, ReactHtmlParser(linkify(parseCommands(removeHTML(this.props.msg))))), this.checkLast());\n    }\n  }]);\n\n  return ChatMsg;\n}(React.Component);\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(Chat, _React$Component3);\n\n  function Chat(props) {\n    var _this3;\n\n    _classCallCheck(this, Chat);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n    _this3.state = {\n      history: []\n    };\n    subscribeToMsgs(function (err, res) {\n      return _this3.setState({\n        history: res\n      });\n    });\n    _this3.doScroll = true;\n    return _this3;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n        this.doScroll = true;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.doScroll) {\n        window.scroll(0, document.body.scrollHeight);\n        this.doScroll = false;\n      }\n    }\n  }, {\n    key: \"lastMsg\",\n    value: function lastMsg() {\n      return this.state.history[this.state.history.length - 1];\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(value, usrName) {\n      var date = new Date();\n      var dateTime = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds() + ' ' + date.getDate() + '-' + (date.getMonth() + 1) + '-' + date.getFullYear();\n      sendMsg({\n        usr: usrName,\n        msg: value,\n        date: dateTime\n      });\n      this.doScroll = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(ChatBar, {\n        onClick: function onClick(value, usrName) {\n          _this4.handleClick(value, usrName);\n        },\n        lastMsg: this.lastMsg(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"msgs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, this.state.history.map(function (item, index) {\n        return React.createElement(ChatMsg, {\n          key: index,\n          msg: item.msg,\n          usr: item.usr,\n          date: item.date,\n          lastMsg: _this4.state.history.length,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Chat;\n}(React.Component); // ========================================\n\n\nReactDOM.render(React.createElement(Chat, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 177\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:\\Users\\dhodu\\Documents\\Nodejs Projects\\Chat\\src\\index.js"],"names":["React","ReactDOM","subscribeToMsgs","sendMsg","ReactHtmlParser","linkify","text","urlRegex","replace","url","removeHTML","htmlRegex","parseCommands","endReg","italicReg","boldReg","underlineReg","strikethroughReg","begReg","lastReg","ChatBar","chatEvent","chatBox","document","getElementById","usrBox","addEventListener","event","keyCode","preventDefault","click","value","props","lastMsg","msg","usr","length","onClick","Component","ChatMsg","console","log","key","index","date","checkLast","Chat","state","history","err","res","setState","doScroll","window","innerHeight","scrollY","body","offsetHeight","scroll","scrollHeight","usrName","Date","dateTime","getHours","getMinutes","getSeconds","getDate","getMonth","getFullYear","handleClick","map","item","render"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,eAAT,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,aAAP;;AAEA,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACnB;AACA,MAAIC,QAAQ,GAAG,6EAAf;AACA,SAAOD,IAAI,CAACE,OAAL,CAAaD,QAAb,EAAuB,UAAUE,GAAV,EAAe;AACzC,WAAO,cAAcA,GAAd,GAAoB,IAApB,GAA2BA,GAA3B,GAAiC,MAAxC;AACH,GAFM,CAAP;AAGH;;AAED,SAASC,UAAT,CAAoBJ,IAApB,EAA0B;AACtB,MAAIK,SAAS,GAAG,kBAAhB;AACA,SAAOL,IAAI,CAACE,OAAL,CAAaG,SAAb,EAAwB,EAAxB,CAAP;AACH;;AAED,SAASC,aAAT,CAAuBN,IAAvB,EAA6B;AACzB,MAAIO,MAAM,GAAG,SAAb;AAAA,MACIC,SAAS,GAAG,QADhB;AAAA,MAEIC,OAAO,GAAG,QAFd;AAAA,MAGIC,YAAY,GAAG,QAHnB;AAAA,MAIIC,gBAAgB,GAAG,QAJvB;AAAA,MAKIC,MAAM,GAAG,KALb;AAAA,MAMIC,OAAO,GAAG,KANd;AAOA,SACIb,IAAI,CAACE,OAAL,CAAaK,MAAb,EAAqB,SAArB,EACKL,OADL,CACaM,SADb,wCAEKN,OAFL,CAEaO,OAFb,uCAGKP,OAHL,CAGaQ,YAHb,gDAIKR,OAJL,CAIaS,gBAJb,mDAKKT,OALL,CAKaU,MALb,oBAMKV,OANL,CAMaW,OANb,QADJ;AAQH;;IAEKC,O;;;;;;;;;;;;;wCAEkB;AAChB,WAAKC,SAAL;AACH;;;gCAEW;AAAA;;AACR,UAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAd;AACA,UAAIC,MAAM,GAAGF,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAb;AACAF,MAAAA,OAAO,CAACI,gBAAR,CAAyB,UAAzB,EAAqC,UAACC,KAAD,EAAW;AAC5C,YAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACtBD,UAAAA,KAAK,CAACE,cAAN;AACAN,UAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCM,KAApC;AACH;AACJ,OALD;AAMAR,MAAAA,OAAO,CAACI,gBAAR,CAAyB,SAAzB,EAAoC,UAACC,KAAD,EAAW;AAC3C,YAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACtBN,UAAAA,OAAO,CAACS,KAAR,GAAgB,KAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBC,GAAnC;AACH;AACJ,OAJD;AAKAT,MAAAA,MAAM,CAACC,gBAAP,CAAwB,UAAxB,EAAoC,UAACC,KAAD,EAAW;AAC3C,YAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACtBD,UAAAA,KAAK,CAACE,cAAN;AACH;AACJ,OAJD;AAKAJ,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,UAACC,KAAD,EAAW;AAC1C,YAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACtBH,UAAAA,MAAM,CAACM,KAAP,GAAe,KAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBE,GAAlC;AACH;AACJ,OAJD;AAKH;;;6BAEQ;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,QAAtB;AAA+B,QAAA,YAAY,EAAC,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,SAAtB;AAAgC,QAAA,SAAS,EAAC,WAA1C;AAAsD,QAAA,YAAY,EAAC,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,EAAE,EAAC,UAAzB;AAAoC,QAAA,OAAO,EACvC,mBAAM;AACF,cAAIb,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAd;AACA,cAAIC,MAAM,GAAGF,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAb;AACA,cAAIW,GAAJ;AACA,cAAI,CAACV,MAAM,CAACM,KAAR,GAAgBN,MAAM,CAACM,KAAP,CAAaK,MAAb,IAAuB,GAA3C,EAAgDD,GAAG,GAAG,WAAN,CAAhD,KACKA,GAAG,GAAGV,MAAM,CAACM,KAAb;AACL,cAAIT,OAAO,CAACS,KAAR,KAAkB,EAAlB,IAAwBT,OAAO,CAACS,KAAR,CAAcK,MAAd,IAAwB,GAApD,EAAyD,MAAI,CAACJ,KAAL,CAAWK,OAAX,CAAmBf,OAAO,CAACS,KAA3B,EAAkCI,GAAlC;AACzDb,UAAAA,OAAO,CAACS,KAAR,GAAgB,EAAhB;AACH,SATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAeI;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,CADJ;AAmBH;;;;EApDiB/B,KAAK,CAACsC,S;;IAuDtBC,O;;;;;;;;;;;;;gCAEU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,OAAX,GAAqB,GAArB,GAA2B,KAAKD,KAAL,CAAWU,GAAlD;AACA,UAAI,KAAKV,KAAL,CAAWC,OAAX,KAAuB,KAAKD,KAAL,CAAWW,KAAtC,EAA6C,OAAQ;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAChD;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKvC,eAAe,CAACC,OAAO,CAACO,aAAa,CAACF,UAAU,CAAC,KAAKsB,KAAL,CAAWG,GAAZ,CAAX,CAAd,CAAR,CADpB,CADJ,EAII;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKH,KAAL,CAAWY,IADhB,CAJJ,EAOI;AAAG,QAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKxC,eAAe,CAACC,OAAO,CAACO,aAAa,CAACF,UAAU,CAAC,KAAKsB,KAAL,CAAWE,GAAZ,CAAX,CAAd,CAAR,CADpB,CAPJ,EAUK,KAAKW,SAAL,EAVL,CADJ;AAcH;;;;EAtBiB7C,KAAK,CAACsC,S;;IAyBtBQ,I;;;;;AAEF,gBAAYd,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,WAAKe,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGA9C,IAAAA,eAAe,CAAC,UAAC+C,GAAD,EAAMC,GAAN;AAAA,aAAc,OAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAEE;AAAX,OAAd,CAAd;AAAA,KAAD,CAAf;AACA,WAAKE,QAAL,GAAgB,IAAhB;AANe;AAOlB;;;;0CAEqB;AAClB,UAAKC,MAAM,CAACC,WAAP,GAAqBD,MAAM,CAACE,OAA7B,IAAyChC,QAAQ,CAACiC,IAAT,CAAcC,YAA3D,EAAyE;AACrE,aAAKL,QAAL,GAAgB,IAAhB;AACH;AACJ;;;yCAEoB;AACjB,UAAI,KAAKA,QAAT,EAAmB;AACfC,QAAAA,MAAM,CAACK,MAAP,CAAc,CAAd,EAAiBnC,QAAQ,CAACiC,IAAT,CAAcG,YAA/B;AACA,aAAKP,QAAL,GAAgB,KAAhB;AACH;AACJ;;;8BAES;AACN,aAAO,KAAKL,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWC,OAAX,CAAmBZ,MAAnB,GAA4B,CAA/C,CAAP;AACH;;;gCAEWL,K,EAAO6B,O,EAAS;AACxB,UAAIhB,IAAI,GAAG,IAAIiB,IAAJ,EAAX;AACA,UAAIC,QAAQ,GAAGlB,IAAI,CAACmB,QAAL,KAAkB,GAAlB,GAAwBnB,IAAI,CAACoB,UAAL,EAAxB,GAA4C,GAA5C,GAAkDpB,IAAI,CAACqB,UAAL,EAAlD,GAAsE,GAAtE,GAA4ErB,IAAI,CAACsB,OAAL,EAA5E,GAA6F,GAA7F,IAAoGtB,IAAI,CAACuB,QAAL,KAAkB,CAAtH,IAA2H,GAA3H,GAAiIvB,IAAI,CAACwB,WAAL,EAAhJ;AACAjE,MAAAA,OAAO,CAAC;AAAEgC,QAAAA,GAAG,EAAEyB,OAAP;AAAgB1B,QAAAA,GAAG,EAAEH,KAArB;AAA4Ba,QAAAA,IAAI,EAAEkB;AAAlC,OAAD,CAAP;AACA,WAAKV,QAAL,GAAgB,IAAhB;AACH;;;6BAEQ;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAE,iBAACrB,KAAD,EAAQ6B,OAAR,EAAoB;AAClC,UAAA,MAAI,CAACS,WAAL,CAAiBtC,KAAjB,EAAwB6B,OAAxB;AACH,SAFD;AAII,QAAA,OAAO,EAAE,KAAK3B,OAAL,EAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKc,KAAL,CAAWC,OAAX,CAAmBsB,GAAnB,CAAuB,UAACC,IAAD,EAAO5B,KAAP;AAAA,eACnB,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA,KAAd;AAAqB,UAAA,GAAG,EAAE4B,IAAI,CAACrC,GAA/B;AAAoC,UAAA,GAAG,EAAEqC,IAAI,CAACpC,GAA9C;AAAmD,UAAA,IAAI,EAAEoC,IAAI,CAAC3B,IAA9D;AAAoE,UAAA,OAAO,EAAE,MAAI,CAACG,KAAL,CAAWC,OAAX,CAAmBZ,MAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADmB;AAAA,OAAvB,CAFR,CANJ,CADJ;AAgBH;;;;EApDcpC,KAAK,CAACsC,S,GAwDzB;;;AAEArC,QAAQ,CAACuE,MAAT,CACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEIjD,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { subscribeToMsgs, sendMsg } from './api'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport './index.css'\r\n\r\nfunction linkify(text) {\r\n    // eslint-disable-next-line\r\n    let urlRegex = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig\r\n    return text.replace(urlRegex, function (url) {\r\n        return '<a href=\"' + url + '\">' + url + '</a>'\r\n    })\r\n}\r\n\r\nfunction removeHTML(text) {\r\n    let htmlRegex = /<\\/?([\\s\\S]*?)>/g\r\n    return text.replace(htmlRegex, '')\r\n}\r\n\r\nfunction parseCommands(text) {\r\n    let endReg = /\\[\\/\\]/g,\r\n        italicReg = /\\[i\\]/g,\r\n        boldReg = /\\[b\\]/g,\r\n        underlineReg = /\\[u\\]/g,\r\n        strikethroughReg = /\\[s\\]/g,\r\n        begReg = /\\[/g,\r\n        lastReg = /\\]/g\r\n    return (\r\n        text.replace(endReg, '</span>')\r\n            .replace(italicReg, `<span style=\"font-style:italic\">`)\r\n            .replace(boldReg, `<span style=\"font-weight:bold\">`)\r\n            .replace(underlineReg, `<span style=\"text-decoration:underline\">`)\r\n            .replace(strikethroughReg, `<span style=\"text-decoration:line-through\">`)\r\n            .replace(begReg, `<span style=\"`)\r\n            .replace(lastReg, `\">`))\r\n}\r\n\r\nclass ChatBar extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.chatEvent()\r\n    }\r\n\r\n    chatEvent() {\r\n        let chatBox = document.getElementById(\"chatBox\")\r\n        let usrBox = document.getElementById(\"usrBox\")\r\n        chatBox.addEventListener(\"keypress\", (event) => {\r\n            if (event.keyCode === 13) {\r\n                event.preventDefault()\r\n                document.getElementById(\"chatSend\").click()\r\n            }\r\n        })\r\n        chatBox.addEventListener(\"keydown\", (event) => {\r\n            if (event.keyCode === 38) {\r\n                chatBox.value = this.props.lastMsg.msg\r\n            }\r\n        })\r\n        usrBox.addEventListener(\"keypress\", (event) => {\r\n            if (event.keyCode === 13) {\r\n                event.preventDefault()\r\n            }\r\n        })\r\n        usrBox.addEventListener(\"keydown\", (event) => {\r\n            if (event.keyCode === 38) {\r\n                usrBox.value = this.props.lastMsg.usr\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <input type=\"text\" id=\"usrBox\" autoComplete=\"off\"></input>\r\n                <input type=\"text\" id=\"chatBox\" autoFocus=\"autofocus\" autoComplete=\"off\"></input>\r\n                <button type=\"button\" id=\"chatSend\" onClick={\r\n                    () => {\r\n                        let chatBox = document.getElementById(\"chatBox\")\r\n                        let usrBox = document.getElementById(\"usrBox\")\r\n                        let usr\r\n                        if (!usrBox.value | usrBox.value.length >= 200) usr = \"Anonymous\"\r\n                        else usr = usrBox.value\r\n                        if (chatBox.value !== \"\" && chatBox.value.length <= 500) this.props.onClick(chatBox.value, usr)\r\n                        chatBox.value = \"\"\r\n                    }\r\n                }\r\n                >Send</button>\r\n                <hr className=\"box\"></hr>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nclass ChatMsg extends React.Component {\r\n\r\n    checkLast() {\r\n        console.log(this.props.lastMsg + '|' + this.props.key)\r\n        if (this.props.lastMsg !== this.props.index) return (<hr className=\"div\"></hr>)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 className=\"usr\">\r\n                    {ReactHtmlParser(linkify(parseCommands(removeHTML(this.props.usr))))}\r\n                </h3>\r\n                <p className=\"date\">\r\n                    {this.props.date}\r\n                </p>\r\n                <p className=\"msg\">\r\n                    {ReactHtmlParser(linkify(parseCommands(removeHTML(this.props.msg))))}\r\n                </p>\r\n                {this.checkLast()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Chat extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            history: []\r\n        }\r\n        subscribeToMsgs((err, res) => this.setState({ history: res }))\r\n        this.doScroll = true\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\r\n            this.doScroll = true\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.doScroll) {\r\n            window.scroll(0, document.body.scrollHeight)\r\n            this.doScroll = false\r\n        }\r\n    }\r\n\r\n    lastMsg() {\r\n        return this.state.history[this.state.history.length - 1]\r\n    }\r\n\r\n    handleClick(value, usrName) {\r\n        let date = new Date();\r\n        let dateTime = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds() + ' ' + date.getDate() + '-' + (date.getMonth() + 1) + '-' + date.getFullYear()\r\n        sendMsg({ usr: usrName, msg: value, date: dateTime })\r\n        this.doScroll = true\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ChatBar onClick={(value, usrName) => {\r\n                    this.handleClick(value, usrName)\r\n                }\r\n                }\r\n                    lastMsg={this.lastMsg()} />\r\n                <div className=\"msgs\">\r\n                    {\r\n                        this.state.history.map((item, index) => (\r\n                            <ChatMsg key={index} msg={item.msg} usr={item.usr} date={item.date} lastMsg={this.state.history.length} />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Chat />,\r\n    document.getElementById(\"root\")\r\n)"]},"metadata":{},"sourceType":"module"}