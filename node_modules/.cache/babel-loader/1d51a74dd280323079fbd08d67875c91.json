{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat thingy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat thingy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat thingy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat thingy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat thingy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\dhodu\\\\Documents\\\\Nodejs Projects\\\\Chat thingy\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Interweave from 'interweave';\nimport './index.css';\n\nfunction linkify(text) {\n  var urlRegex = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig;\n  return text.replace(urlRegex, function (url) {\n    return '<a href=\"' + url + '\">' + url + '</a>';\n  });\n}\n\nvar ChatBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChatBar, _React$Component);\n\n  function ChatBar() {\n    _classCallCheck(this, ChatBar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChatBar).apply(this, arguments));\n  }\n\n  _createClass(ChatBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.chatEvent();\n    }\n  }, {\n    key: \"chatEvent\",\n    value: function chatEvent() {\n      document.getElementById(\"chatBox\").addEventListener(\"keypress\", function (event) {\n        if (event.keyCode === 13) {\n          event.preventDefault();\n          document.getElementById(\"chatSend\").click();\n        }\n      });\n      document.getElementById(\"usrBox\").addEventListener(\"keypress\", function (event) {\n        if (event.keyCode === 13) {\n          event.preventDefault();\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"usrBox\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"chatBox\",\n        autoFocus: \"autofocus\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        id: \"chatSend\",\n        onClick: function onClick() {\n          var chatBox = document.getElementById(\"chatBox\");\n          var usrBox = document.getElementById(\"usrBox\");\n          var usr;\n          if (!usrBox.value) usr = \"Anonymous\";else usr = usrBox.value;\n          if (chatBox.value !== \"\") _this.props.onClick(chatBox.value, usr);\n          chatBox.value = \"\";\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Send\"), React.createElement(\"hr\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChatBar;\n}(React.Component);\n\nvar ChatMsg =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(ChatMsg, _React$Component2);\n\n  function ChatMsg() {\n    _classCallCheck(this, ChatMsg);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChatMsg).apply(this, arguments));\n  }\n\n  _createClass(ChatMsg, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.props.usr), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Interweave, {\n        content: linkify(this.props.msg),\n        matchers: [new UrlMatcher('url'), new HashtagMatcher('hashtag')],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ChatMsg;\n}(React.Component);\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(Chat, _React$Component3);\n\n  function Chat(props) {\n    var _this2;\n\n    _classCallCheck(this, Chat);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n    _this2.state = {\n      history: []\n    };\n    return _this2;\n  }\n\n  _createClass(Chat, [{\n    key: \"handleClick\",\n    value: function handleClick(value, usrName) {\n      var state = this.state;\n      state.history.push({\n        usr: usrName,\n        msg: value\n      });\n      this.setState(state, function () {\n        var scrollingElement = document.scrollingElement || document.body;\n        scrollingElement.scrollTop = scrollingElement.scrollHeight;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(ChatBar, {\n        onClick: function onClick(value, usrName) {\n          _this3.handleClick(value, usrName);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"msg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.state.history.map(function (item, index) {\n        return React.createElement(ChatMsg, {\n          key: index,\n          msg: item.msg,\n          usr: item.usr,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Chat;\n}(React.Component); // window.scrollTo(0, document.body.scrollHeight)\n// ========================================\n\n\nReactDOM.render(React.createElement(Chat, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:\\Users\\dhodu\\Documents\\Nodejs Projects\\Chat thingy\\src\\index.js"],"names":["React","ReactDOM","Interweave","linkify","text","urlRegex","replace","url","ChatBar","chatEvent","document","getElementById","addEventListener","event","keyCode","preventDefault","click","chatBox","usrBox","usr","value","props","onClick","Component","ChatMsg","msg","UrlMatcher","HashtagMatcher","Chat","state","history","usrName","push","setState","scrollingElement","body","scrollTop","scrollHeight","handleClick","map","item","index","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Interweave from 'interweave'\r\nimport './index.css'\r\n\r\nfunction linkify(text) {\r\n    let urlRegex = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig\r\n    return text.replace(urlRegex, (url) => {\r\n        return '<a href=\"' + url + '\">' + url + '</a>'\r\n    });\r\n}\r\n\r\nclass ChatBar extends React.Component {\r\n    componentDidMount() {\r\n        this.chatEvent()\r\n    }\r\n    chatEvent() {\r\n        document.getElementById(\"chatBox\").addEventListener(\"keypress\", (event) => {\r\n            if (event.keyCode === 13) {\r\n                event.preventDefault()\r\n                document.getElementById(\"chatSend\").click()\r\n            }\r\n        })\r\n        document.getElementById(\"usrBox\").addEventListener(\"keypress\", (event) => {\r\n            if (event.keyCode === 13) {\r\n                event.preventDefault()\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <form>\r\n                <input type=\"text\" id=\"usrBox\" autoComplete=\"off\"></input>\r\n                <input type=\"text\" id=\"chatBox\" autoFocus=\"autofocus\" autoComplete=\"off\"></input>\r\n                <button type=\"button\" id=\"chatSend\" onClick={\r\n                    () => {\r\n                        let chatBox = document.getElementById(\"chatBox\")\r\n                        let usrBox = document.getElementById(\"usrBox\")\r\n                        let usr\r\n                        if (!usrBox.value) usr = \"Anonymous\"\r\n                        else usr = usrBox.value\r\n                        if (chatBox.value !== \"\") this.props.onClick(chatBox.value, usr)\r\n                        chatBox.value = \"\"\r\n\r\n                    }\r\n                }\r\n                >Send</button>\r\n                <hr className=\"box\"></hr>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nclass ChatMsg extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    {this.props.usr}\r\n                </h1>\r\n                <p>\r\n                    <Interweave\r\n                        content={linkify(this.props.msg)}\r\n                        matchers={[new UrlMatcher('url'), new HashtagMatcher('hashtag')]}\r\n                    />\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            history: []\r\n        }\r\n    }\r\n\r\n    handleClick(value, usrName) {\r\n        let state = this.state\r\n        state.history.push({ usr: usrName, msg: value })\r\n        this.setState(state, () => {\r\n            let scrollingElement = (document.scrollingElement || document.body)\r\n            scrollingElement.scrollTop = scrollingElement.scrollHeight\r\n        }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ChatBar onClick={(value, usrName) => {\r\n                    this.handleClick(value, usrName)\r\n                }\r\n                } />\r\n                <div className=\"msg\">\r\n                    {\r\n                        this.state.history.map((item, index) => (\r\n                            <ChatMsg key={index} msg={item.msg} usr={item.usr} />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n// window.scrollTo(0, document.body.scrollHeight)\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Chat />,\r\n    document.getElementById(\"root\")\r\n)"]},"metadata":{},"sourceType":"module"}